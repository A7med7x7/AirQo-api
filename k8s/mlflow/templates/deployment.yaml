{{- $artifactCommandPrefix := "default-artifact-root" }}
{{- $artifactCommand := printf "--%s=./mlruns" $artifactCommandPrefix }}
{{- $artifactCommandPrefix = "artifacts-destination" }}
{{- $artifactCommand = printf "--%s=./mlartifacts" $artifactCommandPrefix }}
{{- $artifactCommand = printf "--%s=gs://%s/%s" $artifactCommandPrefix .Values.artifactRoot.gcs.bucket .Values.artifactRoot.gcs.path }}
{{- $dbConnectionDriver := "" }}
{{- $dbConnectionDriver = printf "+%s" .Values.backendStore.postgres.driver }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mlflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mlflow.selectorLabels" . | nindent 8 }}
    spec:
{{/*      {{- if or (and (or .Values.backendStore.postgres.enabled .Values.backendStore.mysql.enabled) (or .Values.backendStore.databaseConnectionCheck .Values.backendStore.databaseMigration) ) .Values.initContainers }}*/}}
      initContainers:
{{/*        {{- if and (or .Values.backendStore.postgres.enabled .Values.backendStore.mysql.enabled) .Values.backendStore.databaseConnectionCheck }}*/}}
        - name: dbchecker
          image: "busybox:1.32"
          imagePullPolicy: IfNotPresent
          command: [ "/script/dbchecker.sh" ]
          envFrom:
            - configMapRef:
                name: {{ template "mlflow.fullname" . }}-env-configmap
          volumeMounts:
            - name: dbchecker
              mountPath: /script/dbchecker.sh
              subPath: dbchecker.sh
{{/*        {{- end }}*/}}
{{/*      {{- with .Values.initContainers }}*/}}
{{/*        {{- toYaml . | nindent 8 }}*/}}
{{/*      {{- end }}*/}}
{{/*      {{- end }}*/}}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "mlflow" ]
          args:
            - server
            - --host=0.0.0.0
            - --port={{ .Values.service.port }}
            - --backend-store-uri=postgresql{{ $dbConnectionDriver }}://
            - {{ $artifactCommand }}
            - --serve-artifacts
          ports:
            - name: {{ .Values.service.name }}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: MLFLOW_VERSION
              value: {{ .Values.image.tag | default .Chart.AppVersion | quote }}
          envFrom:
            - configMapRef:
                name: {{ template "mlflow.fullname" . }}-env-configmap
            - secretRef:
                name: {{ template "mlflow.fullname" . }}-env-secret
          {{- with .Values.extraVolumeMounts }}
          volumeMounts:
            {{ toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: dbchecker
          configMap:
            name: {{ template "mlflow.fullname" . }}-dbchecker
            defaultMode: 0777
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
